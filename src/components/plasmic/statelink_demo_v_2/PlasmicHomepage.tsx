// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: aidk5hCMmGyuB8c7wzcfxE
// Component: Rs1GL85bqiJV

import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Nav from "../../Nav"; // plasmic-import: YM9np3MJPfAp/component
import TextInput from "../../TextInput"; // plasmic-import: sCVLYG7Wc7pl/component
import CollapsibleSection from "../../CollapsibleSection"; // plasmic-import: NXv4kV2mUbsL/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_statelink_demo_v_2.module.css"; // plasmic-import: aidk5hCMmGyuB8c7wzcfxE/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: Rs1GL85bqiJV/css

import Icon12Icon from "./icons/PlasmicIcon__Icon12"; // plasmic-import: gTboGcE9Xmps/icon
import SearchsvgIcon from "./icons/PlasmicIcon__Searchsvg"; // plasmic-import: jw55Nqar_7aR/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: kRxfHv-T7HKP/icon
import Icon5Icon from "./icons/PlasmicIcon__Icon5"; // plasmic-import: yh2Ju7bwNtnc/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: 2MItRI-fdOoV/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: Fham5QgAI4o1/icon
import Icon13Icon from "./icons/PlasmicIcon__Icon13"; // plasmic-import: 60b9r9W0uTEc/icon
import image42SoD5TVyCYpr from "./images/image42.svg"; // plasmic-import: soD5tVy-cYpr/picture
import image18FHcGthkeQ2Fn from "./images/image18.svg"; // plasmic-import: FHcGthkeQ2FN/picture
import image20VcUxcF3Aumn from "./images/image20.svg"; // plasmic-import: Vc-UxcF3AUMN/picture
import image21UnZuVc9Rc3Rc from "./images/image21.svg"; // plasmic-import: UnZuVC9Rc3Rc/picture
import image22Cvgh0HyIvFdP from "./images/image22.svg"; // plasmic-import: cvgh0HYIvFdP/picture
import image19RcckWzOimSr0 from "./images/image19.svg"; // plasmic-import: RCCKWzOimSR0/picture
import image25A9WgndXoFv7 from "./images/image25.svg"; // plasmic-import: A_9WGNDXoFV7/picture
import image29Sn7WGwiZjpRz from "./images/image29.svg"; // plasmic-import: Sn7wGwiZjpRZ/picture
import image30QvrQx5L41M8V from "./images/image30.svg"; // plasmic-import: QVRQx5l41m8V/picture

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  collapsed?: p.Flex<"div">;
  sideNav?: p.Flex<typeof Nav>;
  frame2976?: p.Flex<"div">;
  frame2975?: p.Flex<"div">;
  textInput?: p.Flex<typeof TextInput>;
  frame2974?: p.Flex<"div">;
  curriculumPlanningHeader4?: p.Flex<"div">;
  frame2965?: p.Flex<"div">;
  curriculumPlanningSection2?: p.Flex<"div">;
  recentlyUsedApps3?: p.Flex<"div">;
  appTile6?: p.Flex<"div">;
  frame2968?: p.Flex<"div">;
  appTile38?: p.Flex<"div">;
  frame3006?: p.Flex<"div">;
  appTile39?: p.Flex<"div">;
  frame3007?: p.Flex<"div">;
  appTile40?: p.Flex<"div">;
  frame3008?: p.Flex<"div">;
  appTile41?: p.Flex<"div">;
  frame3009?: p.Flex<"div">;
  collapsibleSection?: p.Flex<typeof CollapsibleSection>;
  curriculumPlanningHeader5?: p.Flex<"div">;
  frame2966?: p.Flex<"div">;
  curriculumPlanningSection?: p.Flex<"div">;
  appTile2?: p.Flex<"div">;
  frame2964?: p.Flex<"div">;
  appTile15?: p.Flex<"a">;
  frame2983?: p.Flex<"div">;
  appTile16?: p.Flex<"div">;
  frame2984?: p.Flex<"div">;
  appTile24?: p.Flex<"div">;
  frame2992?: p.Flex<"div">;
  appTile32?: p.Flex<"div">;
  frame3000?: p.Flex<"div">;
  appTile22?: p.Flex<"div">;
  frame2990?: p.Flex<"div">;
  appTile23?: p.Flex<"div">;
  frame2991?: p.Flex<"div">;
};

export interface DefaultHomepageProps {
  className?: string;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof p.useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "textInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = p.useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"collapsed"}
          data-plasmic-override={overrides.collapsed}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.collapsed
          )}
        >
          <Nav
            data-plasmic-name={"sideNav"}
            data-plasmic-override={overrides.sideNav}
            className={classNames("__wab_instance", sty.sideNav)}
          />

          <div className={classNames(projectcss.all, sty.freeBox__gsiQb)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"frame2976"}
              data-plasmic-override={overrides.frame2976}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame2976)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame2975"}
                data-plasmic-override={overrides.frame2975}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame2975)}
              >
                <Icon12Icon
                  className={classNames(projectcss.all, sty.svg__ayfom)}
                  role={"img"}
                />

                <TextInput
                  data-plasmic-name={"textInput"}
                  data-plasmic-override={overrides.textInput}
                  className={classNames("__wab_instance", sty.textInput)}
                  onChange={(...eventArgs) => {
                    p.generateStateOnChangeProp($state, ["textInput", "value"])(
                      (e => e.target?.value).apply(null, eventArgs)
                    );
                  }}
                  value={
                    p.generateStateValueProp($state, ["textInput", "value"]) ??
                    ""
                  }
                />
              </p.Stack>
              <div
                data-plasmic-name={"frame2974"}
                data-plasmic-override={overrides.frame2974}
                className={classNames(projectcss.all, sty.frame2974)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__hFkaX)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  loading={"lazy"}
                  src={{
                    src: image42SoD5TVyCYpr,
                    fullWidth: 186,
                    fullHeight: 150,
                    aspectRatio: 1.24
                  }}
                />
              </div>
              <Icon5Icon
                className={classNames(projectcss.all, sty.svg__ccrCi)}
                role={"img"}
              />
            </p.Stack>
            <div className={classNames(projectcss.all, sty.freeBox__qsffa)}>
              <div
                data-plasmic-name={"curriculumPlanningHeader4"}
                data-plasmic-override={overrides.curriculumPlanningHeader4}
                className={classNames(
                  projectcss.all,
                  sty.curriculumPlanningHeader4
                )}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2965"}
                  data-plasmic-override={overrides.frame2965}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2965)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__f1Pyr
                    )}
                  >
                    {"Recently Used"}
                  </div>
                  <Icon4Icon
                    className={classNames(projectcss.all, sty.svg__qnKJ)}
                    role={"img"}
                  />
                </p.Stack>
                <div
                  className={classNames(projectcss.all, sty.freeBox__wOhXh)}
                />

                <Icon6Icon
                  className={classNames(projectcss.all, sty.svg__papF2)}
                  role={"img"}
                />
              </div>
              <p.Stack
                as={"div"}
                data-plasmic-name={"curriculumPlanningSection2"}
                data-plasmic-override={overrides.curriculumPlanningSection2}
                hasGap={true}
                className={classNames(
                  projectcss.all,
                  sty.curriculumPlanningSection2
                )}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"recentlyUsedApps3"}
                  data-plasmic-override={overrides.recentlyUsedApps3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.recentlyUsedApps3)}
                >
                  <div
                    data-plasmic-name={"appTile6"}
                    data-plasmic-override={overrides.appTile6}
                    className={classNames(projectcss.all, sty.appTile6)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__kkVmv)}
                      displayHeight={"59px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"60px"}
                      loading={"lazy"}
                      src={{
                        src: image18FHcGthkeQ2Fn,
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame2968"}
                      data-plasmic-override={overrides.frame2968}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame2968)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iQno
                        )}
                      >
                        {"NC ELI"}
                      </div>
                    </p.Stack>
                    <Icon13Icon
                      className={classNames(projectcss.all, sty.svg__zGz5A)}
                      role={"img"}
                    />
                  </div>
                  <div
                    data-plasmic-name={"appTile38"}
                    data-plasmic-override={overrides.appTile38}
                    className={classNames(projectcss.all, sty.appTile38)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__ktPwy)}
                      displayHeight={"60px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"60px"}
                      loading={"lazy"}
                      src={{
                        src: image20VcUxcF3Aumn,
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame3006"}
                      data-plasmic-override={overrides.frame3006}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame3006)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__spi4Q
                        )}
                      >
                        {"EBSCO"}
                      </div>
                    </p.Stack>
                    <Icon13Icon
                      className={classNames(projectcss.all, sty.svg__kzaSe)}
                      role={"img"}
                    />
                  </div>
                  <div
                    data-plasmic-name={"appTile39"}
                    data-plasmic-override={overrides.appTile39}
                    className={classNames(projectcss.all, sty.appTile39)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__rhz1)}
                      displayHeight={"60px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"60px"}
                      loading={"lazy"}
                      src={{
                        src: image21UnZuVc9Rc3Rc,
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame3007"}
                      data-plasmic-override={overrides.frame3007}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame3007)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ipWbI
                        )}
                      >
                        {"Amplify"}
                      </div>
                    </p.Stack>
                    <Icon13Icon
                      className={classNames(projectcss.all, sty.svg__g0OR)}
                      role={"img"}
                    />
                  </div>
                  <div
                    data-plasmic-name={"appTile40"}
                    data-plasmic-override={overrides.appTile40}
                    className={classNames(projectcss.all, sty.appTile40)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__tLwCe)}
                      displayHeight={"60px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"60px"}
                      loading={"lazy"}
                      src={{
                        src: image22Cvgh0HyIvFdP,
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame3008"}
                      data-plasmic-override={overrides.frame3008}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame3008)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___1UOkZ
                        )}
                      >
                        {"Canvas"}
                      </div>
                    </p.Stack>
                    <Icon13Icon
                      className={classNames(projectcss.all, sty.svg__wbsEt)}
                      role={"img"}
                    />
                  </div>
                  <div
                    data-plasmic-name={"appTile41"}
                    data-plasmic-override={overrides.appTile41}
                    className={classNames(projectcss.all, sty.appTile41)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__mei8O)}
                      displayHeight={"60px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"60px"}
                      loading={"lazy"}
                      src={{
                        src: image19RcckWzOimSr0,
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame3009"}
                      data-plasmic-override={overrides.frame3009}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame3009)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8Xi6R
                        )}
                      >
                        {"LETRS "}
                      </div>
                    </p.Stack>
                    <Icon13Icon
                      className={classNames(projectcss.all, sty.svg___08OSo)}
                      role={"img"}
                    />
                  </div>
                </p.Stack>
              </p.Stack>
            </div>
            <CollapsibleSection
              data-plasmic-name={"collapsibleSection"}
              data-plasmic-override={overrides.collapsibleSection}
              className={classNames("__wab_instance", sty.collapsibleSection)}
            />

            <div className={classNames(projectcss.all, sty.freeBox___66RPq)}>
              <div
                data-plasmic-name={"curriculumPlanningHeader5"}
                data-plasmic-override={overrides.curriculumPlanningHeader5}
                className={classNames(
                  projectcss.all,
                  sty.curriculumPlanningHeader5
                )}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2966"}
                  data-plasmic-override={overrides.frame2966}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2966)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yqwqV
                    )}
                  >
                    {"Student Success"}
                  </div>
                  <Icon4Icon
                    className={classNames(projectcss.all, sty.svg__w7Hlt)}
                    role={"img"}
                  />
                </p.Stack>
                <div
                  className={classNames(projectcss.all, sty.freeBox__fExBy)}
                />

                <Icon6Icon
                  className={classNames(projectcss.all, sty.svg__m4Piv)}
                  role={"img"}
                />
              </div>
              <p.Stack
                as={"div"}
                data-plasmic-name={"curriculumPlanningSection"}
                data-plasmic-override={overrides.curriculumPlanningSection}
                hasGap={true}
                className={classNames(
                  projectcss.all,
                  sty.curriculumPlanningSection
                )}
              >
                <div
                  data-plasmic-name={"appTile2"}
                  data-plasmic-override={overrides.appTile2}
                  className={classNames(projectcss.all, sty.appTile2)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___9Kb3)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"60px"}
                    loading={"lazy"}
                    src={{
                      src: image25A9WgndXoFv7,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame2964"}
                    data-plasmic-override={overrides.frame2964}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame2964)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vwH4U
                      )}
                    >
                      {"Schoolnet"}
                    </div>
                  </p.Stack>
                  <Icon13Icon
                    className={classNames(projectcss.all, sty.svg__bHWzI)}
                    role={"img"}
                  />
                </div>
                <a
                  data-plasmic-name={"appTile15"}
                  data-plasmic-override={overrides.appTile15}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.appTile15
                  )}
                  href={"http://classlink.instructure.com/login/saml"}
                  onClick={async event => {
                    const $steps = {};
                    $steps["goToHttpclasslinkinstructurecomloginsaml"] = true
                      ? (() => {
                          const actionArgs = {
                            destination:
                              "http://classlink.instructure.com/login/saml"
                          };
                          return (({ destination }) => {
                            location.assign(destination);
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      typeof $steps[
                        "goToHttpclasslinkinstructurecomloginsaml"
                      ] === "object" &&
                      typeof $steps["goToHttpclasslinkinstructurecomloginsaml"]
                        .then === "function"
                    ) {
                      $steps["goToHttpclasslinkinstructurecomloginsaml"] =
                        await $steps[
                          "goToHttpclasslinkinstructurecomloginsaml"
                        ];
                    }
                  }}
                  title={"Canvas App"}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__fVcbI)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"60px"}
                    loading={"lazy"}
                    src={{
                      src: image22Cvgh0HyIvFdP,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame2983"}
                    data-plasmic-override={overrides.frame2983}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame2983)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kmX2Y
                      )}
                    >
                      {"Canvas"}
                    </div>
                  </p.Stack>
                  <Icon13Icon
                    className={classNames(projectcss.all, sty.svg___8U6MH)}
                    role={"img"}
                  />
                </a>
                <div
                  data-plasmic-name={"appTile16"}
                  data-plasmic-override={overrides.appTile16}
                  className={classNames(projectcss.all, sty.appTile16)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ilRj)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"60px"}
                    loading={"lazy"}
                    src={{
                      src: image29Sn7WGwiZjpRz,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame2984"}
                    data-plasmic-override={overrides.frame2984}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame2984)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vmiIa
                      )}
                    >
                      {"PowerSchool Student"}
                    </div>
                  </p.Stack>
                  <Icon13Icon
                    className={classNames(projectcss.all, sty.svg___4I6S5)}
                    role={"img"}
                  />
                </div>
                <div
                  data-plasmic-name={"appTile24"}
                  data-plasmic-override={overrides.appTile24}
                  className={classNames(projectcss.all, sty.appTile24)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__guvft)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"60px"}
                    loading={"lazy"}
                    src={{
                      src: image30QvrQx5L41M8V,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame2992"}
                    data-plasmic-override={overrides.frame2992}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame2992)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yC1Tx
                      )}
                    >
                      {"NCEES"}
                    </div>
                  </p.Stack>
                  <Icon13Icon
                    className={classNames(projectcss.all, sty.svg__iAbcD)}
                    role={"img"}
                  />
                </div>
                <div
                  data-plasmic-name={"appTile32"}
                  data-plasmic-override={overrides.appTile32}
                  className={classNames(projectcss.all, sty.appTile32)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__znyMk)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"60px"}
                    loading={"lazy"}
                    src={{
                      src: image21UnZuVc9Rc3Rc,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame3000"}
                    data-plasmic-override={overrides.frame3000}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame3000)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iwutK
                      )}
                    >
                      {"Amplify"}
                    </div>
                  </p.Stack>
                  <Icon13Icon
                    className={classNames(projectcss.all, sty.svg__xtkpm)}
                    role={"img"}
                  />
                </div>
                <div
                  data-plasmic-name={"appTile22"}
                  data-plasmic-override={overrides.appTile22}
                  className={classNames(projectcss.all, sty.appTile22)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__xxJez)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"60px"}
                    loading={"lazy"}
                    src={{
                      src: image20VcUxcF3Aumn,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame2990"}
                    data-plasmic-override={overrides.frame2990}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame2990)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hCnTf
                      )}
                    >
                      {"EBSCO"}
                    </div>
                  </p.Stack>
                  <Icon13Icon
                    className={classNames(projectcss.all, sty.svg__ePrXs)}
                    role={"img"}
                  />
                </div>
                <div
                  data-plasmic-name={"appTile23"}
                  data-plasmic-override={overrides.appTile23}
                  className={classNames(projectcss.all, sty.appTile23)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__wOzL)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"60px"}
                    loading={"lazy"}
                    src={{
                      src: image19RcckWzOimSr0,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame2991"}
                    data-plasmic-override={overrides.frame2991}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame2991)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__czBPn
                      )}
                    >
                      {"LETRS "}
                    </div>
                  </p.Stack>
                  <Icon13Icon
                    className={classNames(projectcss.all, sty.svg__gpQew)}
                    role={"img"}
                  />
                </div>
              </p.Stack>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  collapsed: [
    "collapsed",
    "sideNav",
    "frame2976",
    "frame2975",
    "textInput",
    "frame2974",
    "curriculumPlanningHeader4",
    "frame2965",
    "curriculumPlanningSection2",
    "recentlyUsedApps3",
    "appTile6",
    "frame2968",
    "appTile38",
    "frame3006",
    "appTile39",
    "frame3007",
    "appTile40",
    "frame3008",
    "appTile41",
    "frame3009",
    "collapsibleSection",
    "curriculumPlanningHeader5",
    "frame2966",
    "curriculumPlanningSection",
    "appTile2",
    "frame2964",
    "appTile15",
    "frame2983",
    "appTile16",
    "frame2984",
    "appTile24",
    "frame2992",
    "appTile32",
    "frame3000",
    "appTile22",
    "frame2990",
    "appTile23",
    "frame2991"
  ],
  sideNav: ["sideNav"],
  frame2976: ["frame2976", "frame2975", "textInput", "frame2974"],
  frame2975: ["frame2975", "textInput"],
  textInput: ["textInput"],
  frame2974: ["frame2974"],
  curriculumPlanningHeader4: ["curriculumPlanningHeader4", "frame2965"],
  frame2965: ["frame2965"],
  curriculumPlanningSection2: [
    "curriculumPlanningSection2",
    "recentlyUsedApps3",
    "appTile6",
    "frame2968",
    "appTile38",
    "frame3006",
    "appTile39",
    "frame3007",
    "appTile40",
    "frame3008",
    "appTile41",
    "frame3009"
  ],
  recentlyUsedApps3: [
    "recentlyUsedApps3",
    "appTile6",
    "frame2968",
    "appTile38",
    "frame3006",
    "appTile39",
    "frame3007",
    "appTile40",
    "frame3008",
    "appTile41",
    "frame3009"
  ],
  appTile6: ["appTile6", "frame2968"],
  frame2968: ["frame2968"],
  appTile38: ["appTile38", "frame3006"],
  frame3006: ["frame3006"],
  appTile39: ["appTile39", "frame3007"],
  frame3007: ["frame3007"],
  appTile40: ["appTile40", "frame3008"],
  frame3008: ["frame3008"],
  appTile41: ["appTile41", "frame3009"],
  frame3009: ["frame3009"],
  collapsibleSection: ["collapsibleSection"],
  curriculumPlanningHeader5: ["curriculumPlanningHeader5", "frame2966"],
  frame2966: ["frame2966"],
  curriculumPlanningSection: [
    "curriculumPlanningSection",
    "appTile2",
    "frame2964",
    "appTile15",
    "frame2983",
    "appTile16",
    "frame2984",
    "appTile24",
    "frame2992",
    "appTile32",
    "frame3000",
    "appTile22",
    "frame2990",
    "appTile23",
    "frame2991"
  ],
  appTile2: ["appTile2", "frame2964"],
  frame2964: ["frame2964"],
  appTile15: ["appTile15", "frame2983"],
  frame2983: ["frame2983"],
  appTile16: ["appTile16", "frame2984"],
  frame2984: ["frame2984"],
  appTile24: ["appTile24", "frame2992"],
  frame2992: ["frame2992"],
  appTile32: ["appTile32", "frame3000"],
  frame3000: ["frame3000"],
  appTile22: ["appTile22", "frame2990"],
  frame2990: ["frame2990"],
  appTile23: ["appTile23", "frame2991"],
  frame2991: ["frame2991"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  collapsed: "div";
  sideNav: typeof Nav;
  frame2976: "div";
  frame2975: "div";
  textInput: typeof TextInput;
  frame2974: "div";
  curriculumPlanningHeader4: "div";
  frame2965: "div";
  curriculumPlanningSection2: "div";
  recentlyUsedApps3: "div";
  appTile6: "div";
  frame2968: "div";
  appTile38: "div";
  frame3006: "div";
  appTile39: "div";
  frame3007: "div";
  appTile40: "div";
  frame3008: "div";
  appTile41: "div";
  frame3009: "div";
  collapsibleSection: typeof CollapsibleSection;
  curriculumPlanningHeader5: "div";
  frame2966: "div";
  curriculumPlanningSection: "div";
  appTile2: "div";
  frame2964: "div";
  appTile15: "a";
  frame2983: "div";
  appTile16: "div";
  frame2984: "div";
  appTile24: "div";
  frame2992: "div";
  appTile32: "div";
  frame3000: "div";
  appTile22: "div";
  frame2990: "div";
  appTile23: "div";
  frame2991: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "collapsed") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("collapsed"),
  {
    // Helper components rendering sub-elements
    sideNav: makeNodeComponent("sideNav"),
    frame2976: makeNodeComponent("frame2976"),
    frame2975: makeNodeComponent("frame2975"),
    textInput: makeNodeComponent("textInput"),
    frame2974: makeNodeComponent("frame2974"),
    curriculumPlanningHeader4: makeNodeComponent("curriculumPlanningHeader4"),
    frame2965: makeNodeComponent("frame2965"),
    curriculumPlanningSection2: makeNodeComponent("curriculumPlanningSection2"),
    recentlyUsedApps3: makeNodeComponent("recentlyUsedApps3"),
    appTile6: makeNodeComponent("appTile6"),
    frame2968: makeNodeComponent("frame2968"),
    appTile38: makeNodeComponent("appTile38"),
    frame3006: makeNodeComponent("frame3006"),
    appTile39: makeNodeComponent("appTile39"),
    frame3007: makeNodeComponent("frame3007"),
    appTile40: makeNodeComponent("appTile40"),
    frame3008: makeNodeComponent("frame3008"),
    appTile41: makeNodeComponent("appTile41"),
    frame3009: makeNodeComponent("frame3009"),
    collapsibleSection: makeNodeComponent("collapsibleSection"),
    curriculumPlanningHeader5: makeNodeComponent("curriculumPlanningHeader5"),
    frame2966: makeNodeComponent("frame2966"),
    curriculumPlanningSection: makeNodeComponent("curriculumPlanningSection"),
    appTile2: makeNodeComponent("appTile2"),
    frame2964: makeNodeComponent("frame2964"),
    appTile15: makeNodeComponent("appTile15"),
    frame2983: makeNodeComponent("frame2983"),
    appTile16: makeNodeComponent("appTile16"),
    frame2984: makeNodeComponent("frame2984"),
    appTile24: makeNodeComponent("appTile24"),
    frame2992: makeNodeComponent("frame2992"),
    appTile32: makeNodeComponent("appTile32"),
    frame3000: makeNodeComponent("frame3000"),
    appTile22: makeNodeComponent("appTile22"),
    frame2990: makeNodeComponent("frame2990"),
    appTile23: makeNodeComponent("appTile23"),
    frame2991: makeNodeComponent("frame2991"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
