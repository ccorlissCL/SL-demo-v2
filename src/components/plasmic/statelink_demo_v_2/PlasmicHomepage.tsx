// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: aidk5hCMmGyuB8c7wzcfxE
// Component: Rs1GL85bqiJV

import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Nav from "../../Nav"; // plasmic-import: YM9np3MJPfAp/component
import TextInput from "../../TextInput"; // plasmic-import: sCVLYG7Wc7pl/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_statelink_demo_v_2.module.css"; // plasmic-import: aidk5hCMmGyuB8c7wzcfxE/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: Rs1GL85bqiJV/css

import SearchsvgIcon from "./icons/PlasmicIcon__Searchsvg"; // plasmic-import: jw55Nqar_7aR/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: kRxfHv-T7HKP/icon
import image18FHcGthkeQ2Fn from "./images/image18.svg"; // plasmic-import: FHcGthkeQ2FN/picture
import image20VcUxcF3Aumn from "./images/image20.svg"; // plasmic-import: Vc-UxcF3AUMN/picture
import image21UnZuVc9Rc3Rc from "./images/image21.svg"; // plasmic-import: UnZuVC9Rc3Rc/picture
import image22Cvgh0HyIvFdP from "./images/image22.svg"; // plasmic-import: cvgh0HYIvFdP/picture
import image19RcckWzOimSr0 from "./images/image19.svg"; // plasmic-import: RCCKWzOimSR0/picture
import image25A9WgndXoFv7 from "./images/image25.svg"; // plasmic-import: A_9WGNDXoFV7/picture
import image264Xfb8RQwWCb from "./images/image26.svg"; // plasmic-import: 4XFB8RQw_wCb/picture
import image27KMefufbWiNeR from "./images/image27.svg"; // plasmic-import: kMEFUFBWiNeR/picture
import image29Sn7WGwiZjpRz from "./images/image29.svg"; // plasmic-import: Sn7wGwiZjpRZ/picture
import image28Exf2K9AItHtM from "./images/image28.svg"; // plasmic-import: exf2K9aITHtM/picture
import image34R2D3P8Cb52AX from "./images/image34.svg"; // plasmic-import: R2D3P8Cb52aX/picture
import image30QvrQx5L41M8V from "./images/image30.svg"; // plasmic-import: QVRQx5l41m8V/picture

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  sideNav?: p.Flex<typeof Nav>;
  frame2976?: p.Flex<"div">;
  frame2975?: p.Flex<"div">;
  _?: p.Flex<"div">;
  textInput?: p.Flex<typeof TextInput>;
  frame2974?: p.Flex<"div">;
  frame2973?: p.Flex<"div">;
  plusCircle?: p.Flex<"div">;
  recentlyUsedSection?: p.Flex<"div">;
  frame2960?: p.Flex<"div">;
  group2996?: p.Flex<"div">;
  caretDown?: p.Flex<"div">;
  filter?: p.Flex<"div">;
  recentlyUsedApps2?: p.Flex<"div">;
  appTile3?: p.Flex<"div">;
  frame2965?: p.Flex<"div">;
  appTile18?: p.Flex<"div">;
  frame2986?: p.Flex<"div">;
  appTile19?: p.Flex<"div">;
  frame2987?: p.Flex<"div">;
  appTile20?: p.Flex<"div">;
  frame2988?: p.Flex<"div">;
  appTile21?: p.Flex<"div">;
  frame2989?: p.Flex<"div">;
  curriculumPlanningHeader?: p.Flex<"div">;
  frame2961?: p.Flex<"div">;
  group2997?: p.Flex<"div">;
  caretDown2?: p.Flex<"div">;
  filter2?: p.Flex<"div">;
  curriculumPlanningSection2?: p.Flex<"div">;
  appTile4?: p.Flex<"div">;
  frame2966?: p.Flex<"div">;
  appTile25?: p.Flex<"div">;
  frame2993?: p.Flex<"div">;
  appTile26?: p.Flex<"div">;
  frame2994?: p.Flex<"div">;
  appTile27?: p.Flex<"div">;
  frame2995?: p.Flex<"div">;
  appTile28?: p.Flex<"div">;
  frame2996?: p.Flex<"div">;
  appTile30?: p.Flex<"div">;
  frame2998?: p.Flex<"div">;
  appTile31?: p.Flex<"div">;
  frame2999?: p.Flex<"div">;
  curriculumPlanningHeader2?: p.Flex<"div">;
  frame2962?: p.Flex<"div">;
  group2998?: p.Flex<"div">;
  caretDown3?: p.Flex<"div">;
  filter3?: p.Flex<"div">;
  curriculumPlanningSection?: p.Flex<"div">;
  appTile2?: p.Flex<"div">;
  frame2964?: p.Flex<"div">;
  appTile15?: p.Flex<"div">;
  frame2983?: p.Flex<"div">;
  appTile16?: p.Flex<"div">;
  frame2984?: p.Flex<"div">;
  appTile24?: p.Flex<"div">;
  frame2992?: p.Flex<"div">;
  appTile32?: p.Flex<"div">;
  frame3000?: p.Flex<"div">;
  appTile22?: p.Flex<"div">;
  frame2990?: p.Flex<"div">;
  appTile23?: p.Flex<"div">;
  frame2991?: p.Flex<"div">;
};

export interface DefaultHomepageProps {
  className?: string;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof p.useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "textInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = p.useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Nav
            data-plasmic-name={"sideNav"}
            data-plasmic-override={overrides.sideNav}
            className={classNames("__wab_instance", sty.sideNav)}
          />

          <div className={classNames(projectcss.all, sty.freeBox__gsiQb)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"frame2976"}
              data-plasmic-override={overrides.frame2976}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame2976)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame2975"}
                data-plasmic-override={overrides.frame2975}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame2975)}
              >
                <div
                  data-plasmic-name={"_"}
                  data-plasmic-override={overrides._}
                  className={classNames(projectcss.all, sty._)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4Abr6
                    )}
                  >
                    {"\uf002"}
                  </div>
                </div>
                <TextInput
                  data-plasmic-name={"textInput"}
                  data-plasmic-override={overrides.textInput}
                  className={classNames("__wab_instance", sty.textInput)}
                  onChange={(...eventArgs) => {
                    p.generateStateOnChangeProp($state, ["textInput", "value"])(
                      (e => e.target?.value).apply(null, eventArgs)
                    );
                  }}
                  value={
                    p.generateStateValueProp($state, ["textInput", "value"]) ??
                    ""
                  }
                />
              </p.Stack>
              <div
                data-plasmic-name={"frame2974"}
                data-plasmic-override={overrides.frame2974}
                className={classNames(projectcss.all, sty.frame2974)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gVqBv
                  )}
                >
                  {"BELL"}
                </div>
                <div
                  data-plasmic-name={"frame2973"}
                  data-plasmic-override={overrides.frame2973}
                  className={classNames(projectcss.all, sty.frame2973)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__h2Xu
                    )}
                  >
                    {"12"}
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"plusCircle"}
                data-plasmic-override={overrides.plusCircle}
                className={classNames(projectcss.all, sty.plusCircle)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__g4L4
                  )}
                >
                  {"plus"}
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__ieHn)} />
            </p.Stack>
            <div
              data-plasmic-name={"recentlyUsedSection"}
              data-plasmic-override={overrides.recentlyUsedSection}
              className={classNames(projectcss.all, sty.recentlyUsedSection)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame2960"}
                data-plasmic-override={overrides.frame2960}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame2960)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zJiJ3
                  )}
                >
                  {"Recently Used"}
                </div>
                <div
                  data-plasmic-name={"group2996"}
                  data-plasmic-override={overrides.group2996}
                  className={classNames(projectcss.all, sty.group2996)}
                >
                  <div
                    data-plasmic-name={"caretDown"}
                    data-plasmic-override={overrides.caretDown}
                    className={classNames(projectcss.all, sty.caretDown)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qTWi9
                      )}
                    >
                      {"caret-down"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"filter"}
                    data-plasmic-override={overrides.filter}
                    className={classNames(projectcss.all, sty.filter)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wdm6L
                      )}
                    >
                      {"filter"}
                    </div>
                  </div>
                </div>
              </p.Stack>
              <div className={classNames(projectcss.all, sty.freeBox__wGvD9)} />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cWbtY
                )}
              >
                {"chevron-down"}
              </div>
            </div>
            <p.Stack
              as={"div"}
              data-plasmic-name={"recentlyUsedApps2"}
              data-plasmic-override={overrides.recentlyUsedApps2}
              hasGap={true}
              className={classNames(projectcss.all, sty.recentlyUsedApps2)}
            >
              <div
                data-plasmic-name={"appTile3"}
                data-plasmic-override={overrides.appTile3}
                className={classNames(projectcss.all, sty.appTile3)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__qxT67)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image18FHcGthkeQ2Fn,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2965"}
                  data-plasmic-override={overrides.frame2965}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2965)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3Ynjd
                    )}
                  >
                    {"NC ELI"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__exXMt
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
              <div
                data-plasmic-name={"appTile18"}
                data-plasmic-override={overrides.appTile18}
                className={classNames(projectcss.all, sty.appTile18)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__bXpfm)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image20VcUxcF3Aumn,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2986"}
                  data-plasmic-override={overrides.frame2986}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2986)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bk3AX
                    )}
                  >
                    {"EBSCO"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nGonG
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
              <div
                data-plasmic-name={"appTile19"}
                data-plasmic-override={overrides.appTile19}
                className={classNames(projectcss.all, sty.appTile19)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__xa5Y8)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image21UnZuVc9Rc3Rc,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2987"}
                  data-plasmic-override={overrides.frame2987}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2987)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hrB7M
                    )}
                  >
                    {"Amplify"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gzpbg
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
              <div
                data-plasmic-name={"appTile20"}
                data-plasmic-override={overrides.appTile20}
                className={classNames(projectcss.all, sty.appTile20)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__vj41E)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image22Cvgh0HyIvFdP,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2988"}
                  data-plasmic-override={overrides.frame2988}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2988)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lFIxQ
                    )}
                  >
                    {"Canvas"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bhCgT
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
              <div
                data-plasmic-name={"appTile21"}
                data-plasmic-override={overrides.appTile21}
                className={classNames(projectcss.all, sty.appTile21)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___431Tx)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image19RcckWzOimSr0,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2989"}
                  data-plasmic-override={overrides.frame2989}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2989)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aHxQc
                    )}
                  >
                    {"LETRS "}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qpYlg
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
            </p.Stack>
            <div
              data-plasmic-name={"curriculumPlanningHeader"}
              data-plasmic-override={overrides.curriculumPlanningHeader}
              className={classNames(
                projectcss.all,
                sty.curriculumPlanningHeader
              )}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame2961"}
                data-plasmic-override={overrides.frame2961}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame2961)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___0ZRtZ
                  )}
                >
                  {"Curriculum Planning"}
                </div>
                <div
                  data-plasmic-name={"group2997"}
                  data-plasmic-override={overrides.group2997}
                  className={classNames(projectcss.all, sty.group2997)}
                >
                  <div
                    data-plasmic-name={"caretDown2"}
                    data-plasmic-override={overrides.caretDown2}
                    className={classNames(projectcss.all, sty.caretDown2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dXxs2
                      )}
                    >
                      {"caret-down"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"filter2"}
                    data-plasmic-override={overrides.filter2}
                    className={classNames(projectcss.all, sty.filter2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dxg0
                      )}
                    >
                      {"filter"}
                    </div>
                  </div>
                </div>
              </p.Stack>
              <div className={classNames(projectcss.all, sty.freeBox__fDt1H)} />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__sDSar
                )}
              >
                {"chevron-down"}
              </div>
            </div>
            <p.Stack
              as={"div"}
              data-plasmic-name={"curriculumPlanningSection2"}
              data-plasmic-override={overrides.curriculumPlanningSection2}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.curriculumPlanningSection2
              )}
            >
              <div
                data-plasmic-name={"appTile4"}
                data-plasmic-override={overrides.appTile4}
                className={classNames(projectcss.all, sty.appTile4)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ekYgS)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image25A9WgndXoFv7,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2966"}
                  data-plasmic-override={overrides.frame2966}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2966)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yVhHr
                    )}
                  >
                    {"Schoolnet"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ubmj7
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
              <div
                data-plasmic-name={"appTile25"}
                data-plasmic-override={overrides.appTile25}
                className={classNames(projectcss.all, sty.appTile25)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__wDsLs)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image264Xfb8RQwWCb,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2993"}
                  data-plasmic-override={overrides.frame2993}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2993)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hwUl
                    )}
                  >
                    {"EVAAS"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nmpPw
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
              <div
                data-plasmic-name={"appTile26"}
                data-plasmic-override={overrides.appTile26}
                className={classNames(projectcss.all, sty.appTile26)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__sh9B)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image27KMefufbWiNeR,
                    fullWidth: 153,
                    fullHeight: 150,
                    aspectRatio: 1.016667
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2994"}
                  data-plasmic-override={overrides.frame2994}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2994)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__i8Dkp
                    )}
                  >
                    {"Power\nTeacher"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mZrAw
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
              <div
                data-plasmic-name={"appTile27"}
                data-plasmic-override={overrides.appTile27}
                className={classNames(projectcss.all, sty.appTile27)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__wQYrR)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image29Sn7WGwiZjpRz,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2995"}
                  data-plasmic-override={overrides.frame2995}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2995)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ygW8P
                    )}
                  >
                    {"PS Student"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__u17Cz
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
              <div
                data-plasmic-name={"appTile28"}
                data-plasmic-override={overrides.appTile28}
                className={classNames(projectcss.all, sty.appTile28)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__xDWf)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image28Exf2K9AItHtM,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2996"}
                  data-plasmic-override={overrides.frame2996}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2996)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jN6Dc
                    )}
                  >
                    {"ECATS    "}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ovCSs
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
              <div
                data-plasmic-name={"appTile30"}
                data-plasmic-override={overrides.appTile30}
                className={classNames(projectcss.all, sty.appTile30)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__wXnBr)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image34R2D3P8Cb52AX,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2998"}
                  data-plasmic-override={overrides.frame2998}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2998)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3RuA
                    )}
                  >
                    {"Power\nSchool"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ocuB1
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
              <div
                data-plasmic-name={"appTile31"}
                data-plasmic-override={overrides.appTile31}
                className={classNames(projectcss.all, sty.appTile31)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___87Yt8)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image30QvrQx5L41M8V,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2999"}
                  data-plasmic-override={overrides.frame2999}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2999)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ehAp9
                    )}
                  >
                    {"NCEES"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bB7L
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
            </p.Stack>
            <div
              data-plasmic-name={"curriculumPlanningHeader2"}
              data-plasmic-override={overrides.curriculumPlanningHeader2}
              className={classNames(
                projectcss.all,
                sty.curriculumPlanningHeader2
              )}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame2962"}
                data-plasmic-override={overrides.frame2962}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame2962)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___6J3VS
                  )}
                >
                  {"Student Success"}
                </div>
                <div
                  data-plasmic-name={"group2998"}
                  data-plasmic-override={overrides.group2998}
                  className={classNames(projectcss.all, sty.group2998)}
                >
                  <div
                    data-plasmic-name={"caretDown3"}
                    data-plasmic-override={overrides.caretDown3}
                    className={classNames(projectcss.all, sty.caretDown3)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9Ww4L
                      )}
                    >
                      {"caret-down"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"filter3"}
                    data-plasmic-override={overrides.filter3}
                    className={classNames(projectcss.all, sty.filter3)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0GMd6
                      )}
                    >
                      {"filter"}
                    </div>
                  </div>
                </div>
              </p.Stack>
              <div className={classNames(projectcss.all, sty.freeBox__bqUp7)} />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qOBD
                )}
              >
                {"chevron-down"}
              </div>
            </div>
            <p.Stack
              as={"div"}
              data-plasmic-name={"curriculumPlanningSection"}
              data-plasmic-override={overrides.curriculumPlanningSection}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.curriculumPlanningSection
              )}
            >
              <div
                data-plasmic-name={"appTile2"}
                data-plasmic-override={overrides.appTile2}
                className={classNames(projectcss.all, sty.appTile2)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___9Kb3)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image25A9WgndXoFv7,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2964"}
                  data-plasmic-override={overrides.frame2964}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2964)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vwH4U
                    )}
                  >
                    {"Schoolnet"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gc3Dh
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
              <div
                data-plasmic-name={"appTile15"}
                data-plasmic-override={overrides.appTile15}
                className={classNames(projectcss.all, sty.appTile15)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__hy4V)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image27KMefufbWiNeR,
                    fullWidth: 153,
                    fullHeight: 150,
                    aspectRatio: 1.016667
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2983"}
                  data-plasmic-override={overrides.frame2983}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2983)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kmX2Y
                    )}
                  >
                    {"Power\nTeacher"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__upJ3G
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
              <div
                data-plasmic-name={"appTile16"}
                data-plasmic-override={overrides.appTile16}
                className={classNames(projectcss.all, sty.appTile16)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ilRj)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image29Sn7WGwiZjpRz,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2984"}
                  data-plasmic-override={overrides.frame2984}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2984)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vmiIa
                    )}
                  >
                    {"PS Student"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__w8Q
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
              <div
                data-plasmic-name={"appTile24"}
                data-plasmic-override={overrides.appTile24}
                className={classNames(projectcss.all, sty.appTile24)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__guvft)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image30QvrQx5L41M8V,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2992"}
                  data-plasmic-override={overrides.frame2992}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2992)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yC1Tx
                    )}
                  >
                    {"NCEES"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xzpeo
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
              <div
                data-plasmic-name={"appTile32"}
                data-plasmic-override={overrides.appTile32}
                className={classNames(projectcss.all, sty.appTile32)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__znyMk)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image21UnZuVc9Rc3Rc,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame3000"}
                  data-plasmic-override={overrides.frame3000}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame3000)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iwutK
                    )}
                  >
                    {"Amplify"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__n3VFt
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
              <div
                data-plasmic-name={"appTile22"}
                data-plasmic-override={overrides.appTile22}
                className={classNames(projectcss.all, sty.appTile22)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__xxJez)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image20VcUxcF3Aumn,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2990"}
                  data-plasmic-override={overrides.frame2990}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2990)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hCnTf
                    )}
                  >
                    {"EBSCO"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5YWgn
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
              <div
                data-plasmic-name={"appTile23"}
                data-plasmic-override={overrides.appTile23}
                className={classNames(projectcss.all, sty.appTile23)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__wOzL)}
                  displayHeight={"45px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"45px"}
                  loading={"lazy"}
                  src={{
                    src: image19RcckWzOimSr0,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2991"}
                  data-plasmic-override={overrides.frame2991}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2991)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__czBPn
                    )}
                  >
                    {"LETRS "}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___9UJb0
                    )}
                  >
                    {"ellipsis-v"}
                  </div>
                </p.Stack>
              </div>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "sideNav",
    "frame2976",
    "frame2975",
    "_",
    "textInput",
    "frame2974",
    "frame2973",
    "plusCircle",
    "recentlyUsedSection",
    "frame2960",
    "group2996",
    "caretDown",
    "filter",
    "recentlyUsedApps2",
    "appTile3",
    "frame2965",
    "appTile18",
    "frame2986",
    "appTile19",
    "frame2987",
    "appTile20",
    "frame2988",
    "appTile21",
    "frame2989",
    "curriculumPlanningHeader",
    "frame2961",
    "group2997",
    "caretDown2",
    "filter2",
    "curriculumPlanningSection2",
    "appTile4",
    "frame2966",
    "appTile25",
    "frame2993",
    "appTile26",
    "frame2994",
    "appTile27",
    "frame2995",
    "appTile28",
    "frame2996",
    "appTile30",
    "frame2998",
    "appTile31",
    "frame2999",
    "curriculumPlanningHeader2",
    "frame2962",
    "group2998",
    "caretDown3",
    "filter3",
    "curriculumPlanningSection",
    "appTile2",
    "frame2964",
    "appTile15",
    "frame2983",
    "appTile16",
    "frame2984",
    "appTile24",
    "frame2992",
    "appTile32",
    "frame3000",
    "appTile22",
    "frame2990",
    "appTile23",
    "frame2991"
  ],
  sideNav: ["sideNav"],
  frame2976: [
    "frame2976",
    "frame2975",
    "_",
    "textInput",
    "frame2974",
    "frame2973",
    "plusCircle"
  ],
  frame2975: ["frame2975", "_", "textInput"],
  _: ["_"],
  textInput: ["textInput"],
  frame2974: ["frame2974", "frame2973"],
  frame2973: ["frame2973"],
  plusCircle: ["plusCircle"],
  recentlyUsedSection: [
    "recentlyUsedSection",
    "frame2960",
    "group2996",
    "caretDown",
    "filter"
  ],
  frame2960: ["frame2960", "group2996", "caretDown", "filter"],
  group2996: ["group2996", "caretDown", "filter"],
  caretDown: ["caretDown"],
  filter: ["filter"],
  recentlyUsedApps2: [
    "recentlyUsedApps2",
    "appTile3",
    "frame2965",
    "appTile18",
    "frame2986",
    "appTile19",
    "frame2987",
    "appTile20",
    "frame2988",
    "appTile21",
    "frame2989"
  ],
  appTile3: ["appTile3", "frame2965"],
  frame2965: ["frame2965"],
  appTile18: ["appTile18", "frame2986"],
  frame2986: ["frame2986"],
  appTile19: ["appTile19", "frame2987"],
  frame2987: ["frame2987"],
  appTile20: ["appTile20", "frame2988"],
  frame2988: ["frame2988"],
  appTile21: ["appTile21", "frame2989"],
  frame2989: ["frame2989"],
  curriculumPlanningHeader: [
    "curriculumPlanningHeader",
    "frame2961",
    "group2997",
    "caretDown2",
    "filter2"
  ],
  frame2961: ["frame2961", "group2997", "caretDown2", "filter2"],
  group2997: ["group2997", "caretDown2", "filter2"],
  caretDown2: ["caretDown2"],
  filter2: ["filter2"],
  curriculumPlanningSection2: [
    "curriculumPlanningSection2",
    "appTile4",
    "frame2966",
    "appTile25",
    "frame2993",
    "appTile26",
    "frame2994",
    "appTile27",
    "frame2995",
    "appTile28",
    "frame2996",
    "appTile30",
    "frame2998",
    "appTile31",
    "frame2999"
  ],
  appTile4: ["appTile4", "frame2966"],
  frame2966: ["frame2966"],
  appTile25: ["appTile25", "frame2993"],
  frame2993: ["frame2993"],
  appTile26: ["appTile26", "frame2994"],
  frame2994: ["frame2994"],
  appTile27: ["appTile27", "frame2995"],
  frame2995: ["frame2995"],
  appTile28: ["appTile28", "frame2996"],
  frame2996: ["frame2996"],
  appTile30: ["appTile30", "frame2998"],
  frame2998: ["frame2998"],
  appTile31: ["appTile31", "frame2999"],
  frame2999: ["frame2999"],
  curriculumPlanningHeader2: [
    "curriculumPlanningHeader2",
    "frame2962",
    "group2998",
    "caretDown3",
    "filter3"
  ],
  frame2962: ["frame2962", "group2998", "caretDown3", "filter3"],
  group2998: ["group2998", "caretDown3", "filter3"],
  caretDown3: ["caretDown3"],
  filter3: ["filter3"],
  curriculumPlanningSection: [
    "curriculumPlanningSection",
    "appTile2",
    "frame2964",
    "appTile15",
    "frame2983",
    "appTile16",
    "frame2984",
    "appTile24",
    "frame2992",
    "appTile32",
    "frame3000",
    "appTile22",
    "frame2990",
    "appTile23",
    "frame2991"
  ],
  appTile2: ["appTile2", "frame2964"],
  frame2964: ["frame2964"],
  appTile15: ["appTile15", "frame2983"],
  frame2983: ["frame2983"],
  appTile16: ["appTile16", "frame2984"],
  frame2984: ["frame2984"],
  appTile24: ["appTile24", "frame2992"],
  frame2992: ["frame2992"],
  appTile32: ["appTile32", "frame3000"],
  frame3000: ["frame3000"],
  appTile22: ["appTile22", "frame2990"],
  frame2990: ["frame2990"],
  appTile23: ["appTile23", "frame2991"],
  frame2991: ["frame2991"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  sideNav: typeof Nav;
  frame2976: "div";
  frame2975: "div";
  _: "div";
  textInput: typeof TextInput;
  frame2974: "div";
  frame2973: "div";
  plusCircle: "div";
  recentlyUsedSection: "div";
  frame2960: "div";
  group2996: "div";
  caretDown: "div";
  filter: "div";
  recentlyUsedApps2: "div";
  appTile3: "div";
  frame2965: "div";
  appTile18: "div";
  frame2986: "div";
  appTile19: "div";
  frame2987: "div";
  appTile20: "div";
  frame2988: "div";
  appTile21: "div";
  frame2989: "div";
  curriculumPlanningHeader: "div";
  frame2961: "div";
  group2997: "div";
  caretDown2: "div";
  filter2: "div";
  curriculumPlanningSection2: "div";
  appTile4: "div";
  frame2966: "div";
  appTile25: "div";
  frame2993: "div";
  appTile26: "div";
  frame2994: "div";
  appTile27: "div";
  frame2995: "div";
  appTile28: "div";
  frame2996: "div";
  appTile30: "div";
  frame2998: "div";
  appTile31: "div";
  frame2999: "div";
  curriculumPlanningHeader2: "div";
  frame2962: "div";
  group2998: "div";
  caretDown3: "div";
  filter3: "div";
  curriculumPlanningSection: "div";
  appTile2: "div";
  frame2964: "div";
  appTile15: "div";
  frame2983: "div";
  appTile16: "div";
  frame2984: "div";
  appTile24: "div";
  frame2992: "div";
  appTile32: "div";
  frame3000: "div";
  appTile22: "div";
  frame2990: "div";
  appTile23: "div";
  frame2991: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    sideNav: makeNodeComponent("sideNav"),
    frame2976: makeNodeComponent("frame2976"),
    frame2975: makeNodeComponent("frame2975"),
    _: makeNodeComponent("_"),
    textInput: makeNodeComponent("textInput"),
    frame2974: makeNodeComponent("frame2974"),
    frame2973: makeNodeComponent("frame2973"),
    plusCircle: makeNodeComponent("plusCircle"),
    recentlyUsedSection: makeNodeComponent("recentlyUsedSection"),
    frame2960: makeNodeComponent("frame2960"),
    group2996: makeNodeComponent("group2996"),
    caretDown: makeNodeComponent("caretDown"),
    filter: makeNodeComponent("filter"),
    recentlyUsedApps2: makeNodeComponent("recentlyUsedApps2"),
    appTile3: makeNodeComponent("appTile3"),
    frame2965: makeNodeComponent("frame2965"),
    appTile18: makeNodeComponent("appTile18"),
    frame2986: makeNodeComponent("frame2986"),
    appTile19: makeNodeComponent("appTile19"),
    frame2987: makeNodeComponent("frame2987"),
    appTile20: makeNodeComponent("appTile20"),
    frame2988: makeNodeComponent("frame2988"),
    appTile21: makeNodeComponent("appTile21"),
    frame2989: makeNodeComponent("frame2989"),
    curriculumPlanningHeader: makeNodeComponent("curriculumPlanningHeader"),
    frame2961: makeNodeComponent("frame2961"),
    group2997: makeNodeComponent("group2997"),
    caretDown2: makeNodeComponent("caretDown2"),
    filter2: makeNodeComponent("filter2"),
    curriculumPlanningSection2: makeNodeComponent("curriculumPlanningSection2"),
    appTile4: makeNodeComponent("appTile4"),
    frame2966: makeNodeComponent("frame2966"),
    appTile25: makeNodeComponent("appTile25"),
    frame2993: makeNodeComponent("frame2993"),
    appTile26: makeNodeComponent("appTile26"),
    frame2994: makeNodeComponent("frame2994"),
    appTile27: makeNodeComponent("appTile27"),
    frame2995: makeNodeComponent("frame2995"),
    appTile28: makeNodeComponent("appTile28"),
    frame2996: makeNodeComponent("frame2996"),
    appTile30: makeNodeComponent("appTile30"),
    frame2998: makeNodeComponent("frame2998"),
    appTile31: makeNodeComponent("appTile31"),
    frame2999: makeNodeComponent("frame2999"),
    curriculumPlanningHeader2: makeNodeComponent("curriculumPlanningHeader2"),
    frame2962: makeNodeComponent("frame2962"),
    group2998: makeNodeComponent("group2998"),
    caretDown3: makeNodeComponent("caretDown3"),
    filter3: makeNodeComponent("filter3"),
    curriculumPlanningSection: makeNodeComponent("curriculumPlanningSection"),
    appTile2: makeNodeComponent("appTile2"),
    frame2964: makeNodeComponent("frame2964"),
    appTile15: makeNodeComponent("appTile15"),
    frame2983: makeNodeComponent("frame2983"),
    appTile16: makeNodeComponent("appTile16"),
    frame2984: makeNodeComponent("frame2984"),
    appTile24: makeNodeComponent("appTile24"),
    frame2992: makeNodeComponent("frame2992"),
    appTile32: makeNodeComponent("appTile32"),
    frame3000: makeNodeComponent("frame3000"),
    appTile22: makeNodeComponent("appTile22"),
    frame2990: makeNodeComponent("frame2990"),
    appTile23: makeNodeComponent("appTile23"),
    frame2991: makeNodeComponent("frame2991"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
